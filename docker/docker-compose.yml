name: bpoe-events-db-handler
services:
  app:
    build:
      context: ../
      dockerfile: ./docker/Dockerfile
    environment:
      - PYTHONUNBUFFERED=1
      - PYTHONPATH=/
    env_file:
      - .env
    networks:
      - postgres
      - mongo
    depends_on:
      postgres_timescaledb:
        condition: service_healthy
      mongodb:
        condition: service_started
    restart: unless-stopped
    ports:
      - "127.0.0.1:8080:8080"
    volumes:
      - ../log:/log
      - ../src/core/relationaldb/migration_alembic/migrations:/src/core/relationaldb/migration_alembic/migrations

  postgres_timescaledb:
    build:
      context: ../
      dockerfile: ./docker/DockerfileDB
    container_name: timescaledb
    ports:
      - "5432:5432"
      - "0.0.0.0:5433:5432"
    env_file:
      - .env
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./init_postgres.sql:/docker-entrypoint-initdb.d/init_postgres.sql:ro
    networks:
      - postgres
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "${POSTGRES_USER}", "-d", "${POSTGRES_DB}"  ]
      interval: 30s
      retries: 3
      start_period: 10s
      timeout: 10s

# for reading only, same as:
# https://github.com/Cybernetic-Ransomware/bpoe-ocr
  mongodb:
    image: mongo:8.0.6
    container_name: mongos02
    restart: unless-stopped
    env_file:
      - .env
    volumes:
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
      - mongodata:/data/db
    networks:
      - mongo
    ports:
      - "27017:27017"
      - "0.0.0.0:27017:27017"

networks:
  postgres:
    driver: bridge
  mongo:
    driver: bridge

volumes:
  pgdata:
  mongodata:
